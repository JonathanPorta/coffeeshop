// Generated by CoffeeScript 1.6.3
(function() {
  angular.module('coffeeshop').service("storage", function($location, $q, $rootScope) {
    var base, loading, products, runtime, storage;
    products = null;
    base = "" + ($location.protocol()) + "://" + ($location.host()) + ":" + ($location.port()) + "/";
    runtime = new JEFRi.Runtime("" + base + "context.json");
    loading = $q.defer();
    storage = {
      get: function() {},
      save: function() {},
      build: function() {},
      runtime: runtime,
      ready: loading.promise,
      samples: [
        {
          'status': 'active',
          'name': 'Helicopter',
          'description': '',
          'sku': '',
          'partno': ''
        }, {
          'status': 'active',
          'name': 'Racecar',
          'description': '',
          'sku': '',
          'partno': ''
        }, {
          'status': 'active',
          'name': 'Quadcopter',
          'description': '',
          'sku': '',
          'partno': ''
        }, {
          'status': 'active',
          'name': 'Race Track',
          'description': '',
          'sku': '',
          'partno': ''
        }, {
          'status': 'active',
          'name': 'Train Track',
          'description': '',
          'sku': '',
          'partno': ''
        }, {
          'status': 'active',
          'name': 'Train Engine',
          'description': '',
          'sku': '',
          'partno': ''
        }, {
          'status': 'active',
          'name': 'Beginner Airplane',
          'description': '',
          'sku': '',
          'partno': ''
        }, {
          'status': 'active',
          'name': 'Expensive Radio',
          'description': '',
          'sku': '',
          'partno': ''
        }, {
          'status': 'active',
          'name': 'Cheap Radio',
          'description': '',
          'sku': '',
          'partno': ''
        }, {
          'status': 'active',
          'name': 'Small Propellor',
          'description': '',
          'sku': '',
          'partno': ''
        }, {
          'status': 'active',
          'name': 'Medium Propellor',
          'description': '',
          'sku': '',
          'partno': ''
        }, {
          'status': 'active',
          'name': 'Large Propellor',
          'description': '',
          'sku': '',
          'partno': ''
        }
      ]
    };
    runtime.ready.then(function() {
      var s, t;
      t = new window.JEFRi.Transaction();
      t.add({
        _type: 'Product'
      });
      s = new window.JEFRi.Stores.PostStore({
        remote: base,
        runtime: runtime
      });
      return s.execute('get', t).then(function(list) {
        if (list.entities.length) {
          runtime.expand(list.entities);
          return products = runtime.find('Product');
        } else {
          throw new Exception('Product not found.');
        }
      })["catch"](function(e) {
        var product;
        return products = (function() {
          var _i, _len, _ref, _results;
          _ref = storage.samples;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            product = _ref[_i];
            _results.push(runtime.build("Product", product));
          }
          return _results;
        })();
      })["finally"](function() {
        storage.get = function() {
          return products;
        };
        storage.save = function() {
          var product, _i, _len;
          t = new window.JEFRi.Transaction();
          for (_i = 0, _len = products.length; _i < _len; _i++) {
            product = products[_i];
            t.add(product);
          }
          s = new window.JEFRi.Stores.PostStore({
            remote: base,
            runtime: runtime
          });
          return s.execute('persist', t);
        };
        storage.build = function(type, initial) {
          if (initial == null) {
            initial = {};
          }
          return runtime.build(type, initial);
        };
        loading.resolve(products);
        return $rootScope.$digest();
      });
    })["catch"](function(e) {
      console.error("Couldn't load context!");
      return console.error(e.message, e);
    });
    return storage;
  });

}).call(this);
